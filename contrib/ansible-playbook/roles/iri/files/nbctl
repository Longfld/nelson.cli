#!/usr/bin/env python
import argparse
import urllib2
import json
import sys


"""Script to add or remove neighbors
   from IRI API.
   source: https://github.com/nuriel77/iri-playbook
"""

def parse_args():

    parser = argparse.ArgumentParser(
        description='Add or remove full node neighbors.',
        epilog='Example: nbctl -a -n'
               ' udp://1.2.3.4:12345 -n tcp://4.3.2.1:4321')

    parser.add_argument('--neighbors', '-n',
                        action='append',
                        required=True,
                        help='Neighbors to process. Can be specified'
                             ' multiple times.')

    parser.add_argument('--remove', '-r', action='store_true',
                        help='Removes neighbors,')

    parser.add_argument('--add', '-a', action='store_true',
                        help='Add neighbors')

    parser.add_argument('--host', '-i',
                        default='http://localhost:14265',
                        help='IRI API endpoint. Default: %(default)s')

    parser.add_argument('--api-version', '-x',
                        default='1.4',
                        help='IRI API Version. Default: %(default)s')

    return parser.parse_args()


def run():
    try:
        args = parse_args()
    except Exception as e:
        sys.stderr.write("Error parsing arguments: %s\n" % e)
        sys.exit(1)

    if args.add and args.remove:
        sys.stderr.write("You can either select `--add` or `--remove`"
                         ", not both.\n")
        sys.exit(1)
    elif not args.add and not args.remove:
        sys.stderr.write("You must select either `--add` or `--remove`\n")
        sys.exit(1)

    command = 'addNeighbors' if args.add else 'removeNeighbors'

    headers = {
        'content-type': 'application/json',
        'X-IOTA-API-Version': args.api_version
    }

    to_send = json.dumps({
        'command': command,
        'uris': args.neighbors
    })

    request = urllib2.Request(url=args.host,
                              data=to_send,
                              headers=headers)

    return_data = urllib2.urlopen(request).read()
    json_data = json.loads(return_data)
    print(json_data)


if __name__ == "__main__":
    run()
